// Generated by CoffeeScript 1.9.0
var conf, fs, jade, jadeOpt, markdown, md, path;

fs = require('fs');

path = require('path');

markdown = require('markdown').markdown;

jade = require('jade');

conf = require('../config');

jadeOpt = {
  cache: true,
  omitTag: 'radical',
  compileDebug: false,
  baseDir: ''
};

md = function(sourcePath, cb) {
  return fs.readFile(sourcePath, 'utf-8', function(err, cnt) {
    var e;
    if (err) {
      return cb(err);
    }
    try {
      return cb(null, markdown.toHTML(cnt));
    } catch (_error) {
      e = _error;
      return cb(e);
    }
  });
};

module.exports = function(uConf) {
  var funcs, tmpls;
  jadeOpt.baseDir = path.join(conf.dir.theme, uConf.theme || 'default');
  tmpls = {};
  funcs = {
    markdown: md
  };
  fs.readdirSync(jadeOpt.baseDir).forEach(function(item) {
    var key, reg, tmplPath;
    reg = /\.jade$/;
    if (!reg.test(item)) {
      return;
    }
    key = item.replace(reg, '');
    tmplPath = path.resolve(jadeOpt.baseDir, item);
    tmpls[key] = jade.compileFile(tmplPath, jadeOpt);
    return funcs[key] = function(sourcePath, cb) {
      var locals;
      locals = uConf;
      return md(sourcePath, function(err, cnt) {
        if (err) {
          return cb(err);
        }
        locals[key] = cnt;
        return cb(null, tmpls[key](locals));
      });
    };
  });
  return funcs;
};
